// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebService.Data;

#nullable disable

namespace WebService.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250612123541_updated")]
    partial class updated
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebService.Models.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Logo")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("logo");

                    b.Property<string>("MaThuongHieu")
                        .IsRequired()
                        .HasColumnType("varchar(8)")
                        .HasColumnName("ma_thuong_hieu");

                    b.Property<string>("MoTa")
                        .HasColumnType("text")
                        .HasColumnName("mo_ta");

                    b.Property<DateTime>("NgayCapNhat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("ngay_cap_nhat")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("NgayTao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("ngay_tao")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("slug");

                    b.Property<string>("TenThuongHieu")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ten_thuong_hieu");

                    b.Property<int>("ThuTu")
                        .HasColumnType("int")
                        .HasColumnName("thu_tu");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit")
                        .HasColumnName("trang_thai");

                    b.Property<string>("Website")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("website");

                    b.HasKey("Id");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("WebService.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DanhMucCha")
                        .HasColumnType("int")
                        .HasColumnName("danh_muc_cha");

                    b.Property<string>("HinhAnh")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("hinh_anh");

                    b.Property<string>("MaDanhMuc")
                        .IsRequired()
                        .HasColumnType("varchar(8)")
                        .HasColumnName("ma_danh_muc");

                    b.Property<string>("MoTa")
                        .HasColumnType("text")
                        .HasColumnName("mo_ta");

                    b.Property<DateTime>("NgayCapNhat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("ngay_cap_nhat")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("NgayTao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("ngay_tao")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("slug");

                    b.Property<string>("TenDanhMuc")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ten_danh_muc");

                    b.Property<int>("ThuTu")
                        .HasColumnType("int")
                        .HasColumnName("thu_tu");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit")
                        .HasColumnName("trang_thai");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("WebService.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BaoHanh")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("bao_hanh");

                    b.Property<string>("ChatLieu")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("chat_lieu");

                    b.Property<decimal>("Gia")
                        .HasColumnType("decimal(15,2)")
                        .HasColumnName("gia");

                    b.Property<decimal?>("GiaKhuyenMai")
                        .HasColumnType("decimal(15,2)")
                        .HasColumnName("gia_khuyen_mai");

                    b.Property<string>("KichThuoc")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("kich_thuoc");

                    b.Property<int>("LuotXem")
                        .HasColumnType("int")
                        .HasColumnName("luot_xem");

                    b.Property<string>("MaDanhMuc")
                        .IsRequired()
                        .HasColumnType("varchar(8)")
                        .HasColumnName("ma_danh_muc");

                    b.Property<string>("MaSanPham")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)")
                        .HasColumnName("ma_san_pham");

                    b.Property<string>("MaThuongHieu")
                        .IsRequired()
                        .HasColumnType("varchar(8)")
                        .HasColumnName("ma_thuong_hieu");

                    b.Property<string>("MauSac")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("mau_sac");

                    b.Property<string>("MoTa")
                        .HasColumnType("text")
                        .HasColumnName("mo_ta");

                    b.Property<string>("MoTaChiTiet")
                        .HasColumnType("text")
                        .HasColumnName("mo_ta_chi_tiet");

                    b.Property<DateTime>("NgayCapNhat")
                        .HasColumnType("datetime2")
                        .HasColumnName("ngay_cap_nhat");

                    b.Property<DateTime>("NgayTao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("ngay_tao")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<bool>("NoiBat")
                        .HasColumnType("bit")
                        .HasColumnName("noi_bat");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("slug");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int")
                        .HasColumnName("so_luong");

                    b.Property<string>("TenSanPham")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ten_san_pham");

                    b.Property<bool>("TinhTrang")
                        .HasColumnType("bit")
                        .HasColumnName("tinh_trang");

                    b.Property<string>("XuatXu")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("xuat_xu");

                    b.HasKey("Id");

                    b.HasIndex("MaDanhMuc");

                    b.HasIndex("MaThuongHieu");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("WebService.Models.ProductImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AnhChinh")
                        .HasColumnType("bit")
                        .HasColumnName("anh_chinh");

                    b.Property<string>("DuongDan")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("duong_dan");

                    b.Property<string>("MaSanPham")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)")
                        .HasColumnName("ma_san_pham");

                    b.Property<DateTime>("NgayCapNhat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("ngay_cap_nhat")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("NgayTao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("ngay_tao")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("ThuTu")
                        .HasColumnType("int")
                        .HasColumnName("thu_tu");

                    b.HasKey("Id");

                    b.HasIndex("MaSanPham");

                    b.ToTable("ProductImages");
                });

            modelBuilder.Entity("WebService.Models.Product", b =>
                {
                    b.HasOne("WebService.Models.Category", null)
                        .WithMany()
                        .HasForeignKey("MaDanhMuc")
                        .HasPrincipalKey("MaDanhMuc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebService.Models.Brand", null)
                        .WithMany()
                        .HasForeignKey("MaThuongHieu")
                        .HasPrincipalKey("MaThuongHieu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebService.Models.ProductImage", b =>
                {
                    b.HasOne("WebService.Models.Product", "SanPham")
                        .WithMany("HinhAnh")
                        .HasForeignKey("MaSanPham")
                        .HasPrincipalKey("MaSanPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("WebService.Models.Product", b =>
                {
                    b.Navigation("HinhAnh");
                });
#pragma warning restore 612, 618
        }
    }
}
